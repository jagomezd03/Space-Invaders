class Alien{
    field int x, y, s, addr, nA;
    
    constructor Alien new(int sX, int sY){
        let x = sX;
        let y = sY;
        let nA = 18;
        do drawAlien();
        return this;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method void drawAliens(){
        //Refactor the method, this must not be like the method drawShip, because we need more than one alien
    }

    method void destroyAlien(){
        let s = y *32;
        let addr = 16384 + s + (x/16);
        do Memory.poke(addr, 0);
        do Memory.poke(addr + 32, 0);
        do Memory.poke(addr + 64, 0);
        do Memory.poke(addr + 96, 0);
        do Memory.poke(addr + 128, 0);
        do Memory.poke(addr + 160, 0);
        do Memory.poke(addr + 192, 0);
        do Memory.poke(addr + 224, 0);
        do Memory.poke(addr + 256, 0);
        do Memory.poke(addr + 288, 0);
        do Memory.poke(addr + 320, 0);
        do Memory.poke(addr + 352, 0);
        do Memory.poke(addr + 384, 0);
        do Memory.poke(addr + 416, 0);
        do Memory.poke(addr + 448, 0);
        do Memory.poke(addr + 480, 0);
        return;
    }
}